if (jQuery) {
    (function(a) {
        a.extend(a.fn, {
            miniColors: function(v, B) {
                var p = function(E, H, G) {
                    var D = s(E.val());
                    if (!D) {
                        D = "ffffff"
                    }
                    var C = i(D);
                    var F = a('<a class="miniColors-trigger" style="background-color: #' + D + '" href="#"></a>');
                    F.insertAfter(E);
                    E.addClass("miniColors").data("original-maxlength", E.attr("maxlength") || null).data("original-autocomplete", E.attr("autocomplete") || null).data("letterCase", "uppercase").data("trigger", F).data("hsb", C).data("change", H.change ? H.change : null).data("hide", H.hide ? H.hide : null).attr("maxlength", 7).attr("autocomplete", "off").val("#" + t(D, H.letterCase));
                    if (H.readonly) {
                        E.prop("readonly", true)
                    }
                    if (H.disabled) {
                        f(E)
                    }
                    F.bind("click.miniColors", function(o) {
                        o.preventDefault();
                        if (E.val() === "") {
                            E.val("#")
                        }
                        z(E)
                    });
                    E.bind("focus.miniColors", function(o) {
                        if (E.val() === "") {
                            E.val("#")
                        }
                        z(E)
                    });
                    E.bind("blur.miniColors", function(I) {
                        var o = s(E.val());
                        E.val(o ? "#" + t(o, E.data("letterCase")) : "")
                    });
                    E.bind("keydown.miniColors", function(o) {
                        if (o.keyCode === 9) {
                            n(E)
                        }
                    });
                    E.bind("keyup.miniColors", function(o) {
                        l(E)
                    });
                    E.bind("paste.miniColors", function(o) {
                        setTimeout(function() {
                            l(E)
                        }, 5)
                    })
                };
                var A = function(o) {
                    n();
                    o = a(o);
                    o.data("trigger").remove();
                    o.attr("autocomplete", o.data("original-autocomplete")).attr("maxlength", o.data("original-maxlength")).removeData().removeClass("miniColors").unbind(".miniColors");
                    a(document).unbind(".miniColors")
                };
                var r = function(o) {
                    o.prop("disabled", false).data("trigger").css("opacity", 1)
                };
                var f = function(o) {
                    n(o);
                    o.prop("disabled", true).data("trigger").css("opacity", 0.5)
                };
                var z = function(E) {
                    if (E.prop("disabled")) {
                        return false
                    }
                    n();
                    var o = a('<div class="miniColors-selector"></div>');
                    o.append('<div class="miniColors-colors" style="background-color: #FFF;"><div class="miniColors-colorPicker"></div></div>').append('<div class="miniColors-hues"><div class="miniColors-huePicker"></div></div>').append('<div class="miniColors-rgb"><input type="text" style="padding:3px;font-size:10px;width:100px;border:1px solid #c0c0c0;"/></div>').css({
                        top: E.is(":visible") ? E.offset().top + E.outerHeight() : E.data("trigger").offset().top + E.data("trigger").outerHeight(),
                        left: E.is(":visible") ? E.offset().left : E.data("trigger").offset().left,
                        display: "none"
                    }).addClass(E.attr("class"));
                    o.find(".miniColors-rgb").children("input").val(E.val()).data("inputMain", E).bind("keyup", function(G) {
                        if (a(this).val().match(/^#[0-9A-Fa-f]{6,6}$/) != null) {
                            a(this).data("inputMain").val(a(this).val().toUpperCase());
                            l(a(this).data("inputMain"))
                        }
                    });
                    var D = E.data("hsb");
                    o.find(".miniColors-colors").css("backgroundColor", "#" + g({
                        h: D.h,
                        s: 100,
                        b: 100
                    }));
                    var C = E.data("colorPosition");
                    if (!C) {
                        C = d(D)
                    }
                    o.find(".miniColors-colorPicker").css("top", C.y + "px").css("left", C.x + "px");
                    var F = E.data("huePosition");
                    if (!F) {
                        F = u(D)
                    }
                    o.find(".miniColors-huePicker").css("top", F.y + "px");
                    E.data("selector", o).data("huePicker", o.find(".miniColors-huePicker")).data("colorPicker", o.find(".miniColors-colorPicker")).data("mousebutton", 0);
                    a("BODY").append(o);
                    o.fadeIn(100);
                    o.bind("selectstart", function() {
                        return false
                    });
                    a(document).bind("mousedown.miniColors touchstart.miniColors", function(G) {
                        E.data("mousebutton", 1);
                        if (a(G.target).parents().andSelf().hasClass("miniColors-colors")) {
                            G.preventDefault();
                            E.data("moving", "colors");
                            c(E, G)
                        }
                        if (a(G.target).parents().andSelf().hasClass("miniColors-hues")) {
                            G.preventDefault();
                            E.data("moving", "hues");
                            m(E, G)
                        }
                        if (a(G.target).parents().andSelf().hasClass("miniColors-selector") && !a(G.target).parents().andSelf().hasClass("miniColors-rgb")) {
                            G.preventDefault();
                            return
                        }
                        if (a(G.target).parents().andSelf().hasClass("miniColors")) {
                            return
                        }
                        n(E)
                    });
                    a(document).bind("mouseup.miniColors touchend.miniColors", function(G) {
                        G.preventDefault();
                        E.data("mousebutton", 0).removeData("moving")
                    }).bind("mousemove.miniColors touchmove.miniColors", function(G) {
                        G.preventDefault();
                        if (E.data("mousebutton") === 1) {
                            if (E.data("moving") === "colors") {
                                c(E, G)
                            }
                            if (E.data("moving") === "hues") {
                                m(E, G)
                            }
                        }
                    })
                };
                var n = function(o) {
                    if (!o) {
                        o = ".miniColors"
                    }
                    a(o).each(function() {
                        var C = a(this).data("selector");
                        a(this).removeData("selector");
                        a(C).fadeOut(100, function() {
                            a(this).remove()
                        })
                    });
                    a(document).unbind(".miniColors")
                };
                var c = function(F, H) {
                    var E = F.data("colorPicker");
                    E.hide();
                    var C = {
                        x: H.pageX,
                        y: H.pageY
                    };
                    if (H.originalEvent.changedTouches) {
                        C.x = H.originalEvent.changedTouches[0].pageX;
                        C.y = H.originalEvent.changedTouches[0].pageY
                    }
                    C.x = C.x - F.data("selector").find(".miniColors-colors").offset().left - 5;
                    C.y = C.y - F.data("selector").find(".miniColors-colors").offset().top - 5;
                    if (C.x <= -5) {
                        C.x = -5
                    }
                    if (C.x >= 144) {
                        C.x = 144
                    }
                    if (C.y <= -5) {
                        C.y = -5
                    }
                    if (C.y >= 144) {
                        C.y = 144
                    }
                    F.data("colorPosition", C);
                    E.css("left", C.x).css("top", C.y).show();
                    var G = Math.round((C.x + 5) * 0.67);
                    if (G < 0) {
                        G = 0
                    }
                    if (G > 100) {
                        G = 100
                    }
                    var o = 100 - Math.round((C.y + 5) * 0.67);
                    if (o < 0) {
                        o = 0
                    }
                    if (o > 100) {
                        o = 100
                    }
                    var D = F.data("hsb");
                    D.s = G;
                    D.b = o;
                    e(F, D, true)
                };
                var m = function(D, F) {
                    var G = D.data("huePicker");
                    G.hide();
                    var o = {
                        y: F.pageY
                    };
                    if (F.originalEvent.changedTouches) {
                        o.y = F.originalEvent.changedTouches[0].pageY
                    }
                    o.y = o.y - D.data("selector").find(".miniColors-colors").offset().top - 1;
                    if (o.y <= -1) {
                        o.y = -1
                    }
                    if (o.y >= 149) {
                        o.y = 149
                    }
                    D.data("huePosition", o);
                    G.css("top", o.y).show();
                    var E = Math.round((150 - o.y - 1) * 2.4);
                    if (E < 0) {
                        E = 0
                    }
                    if (E > 360) {
                        E = 360
                    }
                    var C = D.data("hsb");
                    C.h = E;
                    e(D, C, true)
                };
                var e = function(C, o, E) {
                    C.data("hsb", o);
                    var D = g(o);
                    if (E) {
                        C.val("#" + t(D, C.data("letterCase")))
                    }
                    C.data("trigger").css("backgroundColor", "#" + D);
                    if (C.data("selector")) {
                        C.data("selector").find(".miniColors-colors").css("backgroundColor", "#" + g({
                            h: o.h,
                            s: 100,
                            b: 100
                        }))
                    }
                    if (C.data("selector")) {
                        C.data("selector").find(".miniColors-rgb").children("input").val(C.val())
                    }
                    if (C.data("change")) {
                        if (D === C.data("lastChange")) {
                            return
                        }
                        C.data("change").call(C.get(0), "#" + D, y(o));
                        C.data("lastChange", D)
                    }
                };
                var l = function(E) {
                    E.val("#" + x(E.val()));
                    var F = s(E.val());
                    if (!F) {
                        return false
                    }
                    var D = i(F);
                    var H = E.data("hsb");
                    if (D.h === H.h && D.s === H.s && D.b === H.b) {
                        return true
                    }
                    var C = d(D);
                    var o = a(E.data("colorPicker"));
                    o.css("top", C.y + "px").css("left", C.x + "px");
                    E.data("colorPosition", C);
                    var I = u(D);
                    var G = a(E.data("huePicker"));
                    G.css("top", I.y + "px");
                    E.data("huePosition", I);
                    e(E, D, false);
                    return true
                };
                var t = function(o, C) {
                    if (C === "lowercase") {
                        return o.toLowerCase()
                    }
                    if (C === "uppercase") {
                        return o.toUpperCase()
                    }
                    return o
                };
                var d = function(C) {
                    var o = Math.ceil(C.s / 0.67);
                    if (o < 0) {
                        o = 0
                    }
                    if (o > 150) {
                        o = 150
                    }
                    var D = 150 - Math.ceil(C.b / 0.67);
                    if (D < 0) {
                        D = 0
                    }
                    if (D > 150) {
                        D = 150
                    }
                    return {
                        x: o - 5,
                        y: D - 5
                    }
                };
                var u = function(o) {
                    var C = 150 - (o.h / 2.4);
                    if (C < 0) {
                        h = 0
                    }
                    if (C > 150) {
                        h = 150
                    }
                    return {
                        y: C - 1
                    }
                };
                var x = function(o) {
                    return o.replace(/[^A-F0-9]/ig, "")
                };
                var s = function(o) {
                    o = x(o);
                    if (!o) {
                        return null
                    }
                    if (o.length === 3) {
                        o = o[0] + o[0] + o[1] + o[1] + o[2] + o[2]
                    }
                    return o.length === 6 ? o : null
                };
                var y = function(o) {
                    var D = {};
                    var H = Math.round(o.h);
                    var G = Math.round(o.s * 255 / 100);
                    var C = Math.round(o.b * 255 / 100);
                    if (G === 0) {
                        D.r = D.g = D.b = C
                    } else {
                        var I = C;
                        var F = (255 - G) * C / 255;
                        var E = (I - F) * (H % 60) / 60;
                        if (H === 360) {
                            H = 0
                        }
                        if (H < 60) {
                            D.r = I;
                            D.b = F;
                            D.g = F + E
                        } else {
                            if (H < 120) {
                                D.g = I;
                                D.b = F;
                                D.r = I - E
                            } else {
                                if (H < 180) {
                                    D.g = I;
                                    D.r = F;
                                    D.b = F + E
                                } else {
                                    if (H < 240) {
                                        D.b = I;
                                        D.r = F;
                                        D.g = I - E
                                    } else {
                                        if (H < 300) {
                                            D.b = I;
                                            D.g = F;
                                            D.r = F + E
                                        } else {
                                            if (H < 360) {
                                                D.r = I;
                                                D.g = F;
                                                D.b = I - E
                                            } else {
                                                D.r = 0;
                                                D.g = 0;
                                                D.b = 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return {
                        r: Math.round(D.r),
                        g: Math.round(D.g),
                        b: Math.round(D.b)
                    }
                };
                var b = function(o) {
                    var C = [o.r.toString(16), o.g.toString(16), o.b.toString(16)];
                    a.each(C, function(D, E) {
                        if (E.length === 1) {
                            C[D] = "0" + E
                        }
                    });
                    return C.join("")
                };
                var w = function(o) {
                    o = parseInt(((o.indexOf("#") > -1) ? o.substring(1) : o), 16);
                    return {
                        r: o >> 16,
                        g: (o & 65280) >> 8,
                        b: (o & 255)
                    }
                };
                var j = function(D) {
                    var C = {
                        h: 0,
                        s: 0,
                        b: 0
                    };
                    var E = Math.min(D.r, D.g, D.b);
                    var o = Math.max(D.r, D.g, D.b);
                    var F = o - E;
                    C.b = o;
                    C.s = o !== 0 ? 255 * F / o : 0;
                    if (C.s !== 0) {
                        if (D.r === o) {
                            C.h = (D.g - D.b) / F
                        } else {
                            if (D.g === o) {
                                C.h = 2 + (D.b - D.r) / F
                            } else {
                                C.h = 4 + (D.r - D.g) / F
                            }
                        }
                    } else {
                        C.h = -1
                    }
                    C.h *= 60;
                    if (C.h < 0) {
                        C.h += 360
                    }
                    C.s *= 100 / 255;
                    C.b *= 100 / 255;
                    return C
                };
                var i = function(C) {
                    var o = j(w(C));
                    if (o.s === 0) {
                        o.h = 360
                    }
                    return o
                };
                var g = function(o) {
                    return b(y(o))
                };
                switch (v) {
                    case "readonly":
                        a(this).each(function() {
                            if (!a(this).hasClass("miniColors")) {
                                return
                            }
                            a(this).prop("readonly", B)
                        });
                        return a(this);
                    case "disabled":
                        a(this).each(function() {
                            if (!a(this).hasClass("miniColors")) {
                                return
                            }
                            if (B) {
                                f(a(this))
                            } else {
                                r(a(this))
                            }
                        });
                        return a(this);
                    case "value":
                        if (B === undefined) {
                            if (!a(this).hasClass("miniColors")) {
                                return
                            }
                            var q = a(this),
                                k = s(q.val());
                            return k ? "#" + t(k, q.data("letterCase")) : null
                        }
                        a(this).each(function() {
                            if (!a(this).hasClass("miniColors")) {
                                return
                            }
                            a(this).val(B);
                            l(a(this))
                        });
                        return a(this);
                    case "destroy":
                        a(this).each(function() {
                            if (!a(this).hasClass("miniColors")) {
                                return
                            }
                            A(a(this))
                        });
                        return a(this);
                    default:
                        if (!v) {
                            v = {}
                        }
                        a(this).each(function() {
                            if (a(this)[0].tagName.toLowerCase() !== "input") {
                                return
                            }
                            if (a(this).data("trigger")) {
                                return
                            }
                            p(a(this), v, B)
                        });
                        return a(this)
                }
            }
        })
    })(jQuery)
};